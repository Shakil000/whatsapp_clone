[{"C:\\xampp\\htdocs\\test_react\\src\\index.js":"1","C:\\xampp\\htdocs\\test_react\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\test_react\\src\\App.js":"3","C:\\xampp\\htdocs\\test_react\\src\\Sidebar.js":"4","C:\\xampp\\htdocs\\test_react\\src\\SidebarChat.js":"5","C:\\xampp\\htdocs\\test_react\\src\\Chat.js":"6","C:\\xampp\\htdocs\\test_react\\src\\firebase.js":"7","C:\\xampp\\htdocs\\test_react\\src\\Login.js":"8","C:\\xampp\\htdocs\\test_react\\src\\reducer.js":"9","C:\\xampp\\htdocs\\test_react\\src\\StateProvider.js":"10"},{"size":683,"mtime":1607590172293,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":792,"mtime":1607587745002,"results":"14","hashOfConfig":"12"},{"size":1901,"mtime":1607591159603,"results":"15","hashOfConfig":"12"},{"size":1497,"mtime":1607603734684,"results":"16","hashOfConfig":"12"},{"size":3252,"mtime":1607603526300,"results":"17","hashOfConfig":"12"},{"size":717,"mtime":1607588581869,"results":"18","hashOfConfig":"12"},{"size":1132,"mtime":1607604337076,"results":"19","hashOfConfig":"12"},{"size":436,"mtime":1607603135602,"results":"20","hashOfConfig":"12"},{"size":406,"mtime":1607524667988,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11jod2n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\xampp\\htdocs\\test_react\\src\\index.js",[],["47","48"],"C:\\xampp\\htdocs\\test_react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\test_react\\src\\App.js",["49","50"],"import React, {useState} from \"react\";\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Login from './Login';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {useStateValue} from \"./StateProvider\";\n\nfunction App() {\n    const [{user}, dispatch ] = useStateValue();\n\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ):(\n        <div className=\"app__body\">\n        <Router>\n              <Sidebar />\n              <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n                </Route>\n               <Route path=\"/\">\n               <Chat />\n          </Route>\n        </Switch>\n        </Router>\n    </div>\n      )}\n     \n    </div>\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\test_react\\src\\Sidebar.js",["51"],"import React, { useEffect,useState} from 'react';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n import ChatIcon from \"@material-ui/icons/Chat\";\r\n import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n import SearchIcon from '@material-ui/icons/Search';\r\nimport './Sidebar.css';\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {   \r\n    const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n            id:doc.id,\r\n            data:doc.data(),\r\n        }))\r\n    )\r\n    );\r\n    return() => {\r\n        unsubscribe();\r\n    };\r\n    }, [])\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL}/>\r\n        <div className=\"sidebar__headerRight\">\r\n         <IconButton>\r\n        <DonutLargeIcon/>\r\n        </IconButton>\r\n        <IconButton>\r\n        <ChatIcon/> \r\n        </IconButton>\r\n        <IconButton>\r\n        <MoreVertIcon/>\r\n        </IconButton>\r\n      </div>\r\n           </div>\r\n           <div className=\"sidebar__search\">\r\n               <div className=\"sidebar__searchContainer\">\r\n               <SearchIcon/>\r\n          <input placeholder=\"Search or start new chat\" type=\"text\" className=\"searchInput\"/>\r\n           </div>\r\n\r\n               </div>\r\n          \r\n           <div className=\"sidebar__chats\">\r\n              <SidebarChat addNewChat/>\r\n            {rooms.map(room =>(\r\n                <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\xampp\\htdocs\\test_react\\src\\SidebarChat.js",["52"],"import React, {useEffect, useState } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";  \r\n\r\nfunction SidebarChat({ id, name, addNewChat}) {\r\n\r\n    const[seed, setSeed] = useState(\"\");\r\n    const [messages,setMessages] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n        if (id) {\r\n            db.collection('rooms').doc(id).collection\r\n            ('messages').orderBy('timestamp','desc').\r\n            onSnapshot(snapshot =>\r\n                setMessages(snapshot.docs.map((doc) =>\r\n                doc.data()))\r\n\r\n            );\r\n        }\r\n    }, [id] );\r\n\r\n\r\n    useEffect(() => {\r\n       setSeed(Math.floor(Math.random() *5000))\r\n    }, [])\r\n\r\nconst createChat = () =>{\r\n    const roomName = prompt(\"Please enter name for chat room\");\r\n\r\n    if (roomName){\r\n        db.collection(\"rooms\").add({\r\n            name:roomName,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n    return !addNewChat ? (\r\n        <Link to ={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ):(\r\n     <div onClick={createChat}\r\n         className=\"sidebarChat\">\r\n             <h2>Add new Chat</h2>\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat\r\n","C:\\xampp\\htdocs\\test_react\\src\\Chat.js",["53","54","55","56","57"],"import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, Search, SpaceBarOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticon from \"@material-ui/icons/InsertEmoticon\";\r\nimport Mic from \"@material-ui/icons/Mic\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");   \r\n    const { roomId } = useParams();\r\n    const [ roomName, setRoomName] = useState(\"\");\r\n    const [ messages, setMessages]= useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n\r\n     useEffect(() => {\r\n      if (roomId) {\r\n          db.collection(\"rooms\")\r\n          .doc(roomId)\r\n          .onSnapshot((snapshot) => setRoomName(snapshot.data().name)); \r\n\r\n    db.collection(\"rooms\")\r\n    .doc(roomId)\r\n    .collection(\"messages\")\r\n    .orderBy(\"timestamp\",\"asc\")\r\n    .onSnapshot((snapshot) =>\r\n       setMessages(snapshot.docs.map((doc)=> \r\n       doc.data()))\r\n        );\r\n\r\n      }\r\n     },[roomId]);\r\n\r\nuseEffect(() =>{\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n},[roomId]);\r\n\r\n const sendMessage = (e) =>{\r\n    e.preventDefault();\r\n    console.log(\"You typed >>>\", input);\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection \r\n    (\"messages\").add({\r\n     message: input,\r\n     name: user.displayName,\r\n     timestamp: firebase.firestore.FieldValue.\r\n     serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n };\r\n\r\n\r\n    return <div className=\"chat\">\r\n        <div className=\"chat__header\">\r\n         <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n\r\n\r\n         <div className=\"chat__headerInfo\">\r\n             <h3>{roomName}</h3>\r\n             <p>\r\n             Last seen {\" \"}\r\n             {new Date(\r\n                 messages[messages.length - 1]?.\r\n                 timestamp?.toDate()\r\n             ) .toUTCString()}\r\n            </p>\r\n         </div>\r\n         <div className=\"chat__headerright\">\r\n         <IconButton>\r\n        <Search/>\r\n        </IconButton>\r\n        <IconButton>\r\n        <AttachFile/> \r\n        </IconButton>\r\n        <IconButton>\r\n        <MoreVert/>\r\n        </IconButton>   \r\n         </div>\r\n        </div>\r\n        <div className=\"chat__body\">\r\n            {messages.map((message) =>(\r\n                <p className={`chat__message ${message.name === user.displayName &&\"chat__reciever\"}`}>\r\n\r\n        <span className=\"chat__name\">\r\n            {message.name}</span>\r\n            {message.message}\r\n        <span className=\"chat__timestamp\">\r\n            {new Date(message.timestamp?.toDate\r\n                ()).toUTCString()}\r\n        </span>\r\n        </p>\r\n            ))}\r\n        \r\n        </div>\r\n        <div className=\"chat__footer\">\r\n      <InsertEmoticon/>\r\n      <form>\r\n          <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a Message\" type=\"text\"/>  \r\n          <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n      </form>\r\n      <Mic/>\r\n        </div>\r\n    </div>;\r\n    \r\n}\r\n\r\nexport default Chat\r\n","C:\\xampp\\htdocs\\test_react\\src\\firebase.js",[],"C:\\xampp\\htdocs\\test_react\\src\\Login.js",["58"],"C:\\xampp\\htdocs\\test_react\\src\\reducer.js",[],"C:\\xampp\\htdocs\\test_react\\src\\StateProvider.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":16,"nodeType":"65","messageId":"66","endLine":1,"endColumn":24},{"ruleId":"63","severity":1,"message":"67","line":10,"column":20,"nodeType":"65","messageId":"66","endLine":10,"endColumn":28},{"ruleId":"63","severity":1,"message":"67","line":15,"column":22,"nodeType":"65","messageId":"66","endLine":15,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":15,"column":53,"nodeType":"70","messageId":"71","endLine":15,"endColumn":54,"fix":"72"},{"ruleId":"63","severity":1,"message":"73","line":2,"column":40,"nodeType":"65","messageId":"66","endLine":2,"endColumn":56},{"ruleId":"63","severity":1,"message":"67","line":19,"column":22,"nodeType":"65","messageId":"66","endLine":19,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":52,"column":46,"nodeType":"70","messageId":"71","endLine":52,"endColumn":47,"fix":"74"},{"ruleId":"75","severity":1,"message":"76","line":69,"column":15,"nodeType":"70","messageId":"77","endLine":72,"endColumn":28,"fix":"78"},{"ruleId":"68","severity":1,"message":"69","line":70,"column":47,"nodeType":"70","messageId":"71","endLine":70,"endColumn":49,"fix":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":10},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"86","text":"87"},"'SpaceBarOutlined' is defined but never used.",{"range":"88","text":"89"},"no-whitespace-before-property","Unexpected whitespace before property toUTCString.","unexpectedWhitespace",{"range":"90","text":"91"},{"range":"92","text":"93"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",[495,510],"\r\n            .",[1576,1584],"\r\n     .",[2055,2057],".",[1999,2020],"\r\n                 ?."]